# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
          os: [ubuntu-20.04, windows-latest]
          python-version: ["3.7", "3.8", "3.9", "3.10"]

    steps:
    - uses: actions/checkout@v3
    - name: Update submodules
      run: git submodule update --init --recursive
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel==0.40.0 pybind11==2.8.0
    - name: Build package
      run: python setup.py bdist_wheel
      env:
       CC:   gcc-9
       CXX:  g++-9
    - name: Audit wheel
      run: |
        pip install auditwheel==5.4.0 patchelf==0.17.2
        auditwheel show dist/*.whl
        auditwheel repair --strip --plat manylinux_2_31_x86_64 --exclude libgomp.so.1 dist/*.whl
        rm -r dist
        mv wheelhouse dist
      if: matrix.os == 'ubuntu-20.04'
    - uses: actions/upload-artifact@v3
      with:
        name: dist
        path: ./dist
        
  publish:
    needs: build
    if: ${{ always() }}
    runs-on: ubuntu-20.04
  
    steps:
    - uses: actions/checkout@v3
    - uses: actions/download-artifact@v3
      with:
        name: dist
        path: ./dist
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
