Bug:

- divide by col & row giving wired results
- recheck effectiveness of other size optimization: old check was bugged and completely uninformative


Features (ranked)


- grid queries
  - can also be use during construction
  - started with wrong interface: vPos, vSize, and vNum
  - change to: for each dimension a list of the coordinates that shall be queried



- store list of individual points for each poision of the prefix sum array 
    - think about: how to deal with data-rectangles / where to store them?
      - if storage is sorted format, a proper binary search is enough
      - is decomposition as is done for the annotations an option?
        - split overlapping rectangles into overlapping and non overlapping part
        - keep counted ids in a set
        - count is size of set at the end
    - Idea: store for each box/prefix sum entry (check num points in box first)
    - requires one additional vector
    - then points can be searched by iteration at smallest resolution
    - try other sparse coords arrays before trying this (didn't help -> need point storage)
    - store points in cooler format basically
      - pos x from, pos y from, pos x to, pos y to, mapq, filters, ...
      - sorted by columns

[cutoff]

- move code into smaller files
  - e.g. file for grid queries / single queries & fullQueries

- hdf5 storage

- think about caching the overlay prefix sums during construction...
    - would yield another giant speedup!
    - requires size estimation adjustment

- biocontainer instead of yaml file?

- conditions in the computational graph of libCm???


