Bug:

- divide by col & row giving wired results
- recheck effectiveness of other size optimization: old check was bugged and completely uninformative


Features (ranked)

- compile time optimization
    - use parent class 

- annotation filters new system
    - new new approach:
    - points in one dimension
    - one slice for each annotation type
    - one slice for reads that have no annotation
    - one slice for reads that are in multiple annotations
      - enter negative values in this slice
      - if a read is in n annotations then add as value -n+1 (so that the multiple counts even out)
    - place the 'gene' annotation at the bottom of this dimension
    - @note make sure the annotation dimension is the last dimension

- grid-seq:
    - remove coverage indices for replicates
    - sample average coverage from contigs -> pick x many
    - coverage should be separate system form replicates

- grid queries
  - can also be use during construction
  - started with wrong interface: vPos, vSize, and vNum
  - change to: for each dimension a list of the coordinates that shall be queried


[cutoff]

- store list of individual points for each poision of the prefix sum array 
    - Idea: store for each box (check num points in box first)
    - requires one additional vector
    - then points can be searched by iteration at smallest resolution
    - try other sparse coords arrays before trying this (didn't help -> need point storage)
    - store points in cooler format basically
      - pos x from, pos y from, pos x to, pos y to, mapq, filters, ...
      - sorted by columns

- move code into smaller files
  - e.g. file for grid queries / single queries & fullQueries

- hdf5 storage

- think about caching the overlay prefix sums during construction...
    - would yield another giant speedup!
    - requires size estimation adjustment

- biocontainer instead of yaml file?

- conditions in the computational graph of libCm???


